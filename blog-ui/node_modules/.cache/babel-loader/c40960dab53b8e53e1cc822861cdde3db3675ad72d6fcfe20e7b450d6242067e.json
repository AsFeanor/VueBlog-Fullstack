{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.greeting), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: post.id\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(post.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(post.content), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","greeting","_Fragment","_renderList","posts","post","key","id","title","content"],"sources":["/app/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ greeting }}</h1>\n    <ul>\n      <li v-for=\"post in posts\" :key=\"post.id\">\n        <strong>{{ post.title }}</strong>\n        <p>{{ post.content }}</p>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      greeting: 'Welcome to Blog App!',\n      posts: []\n    };\n  },\n  mounted() {\n    this.fetchPosts();\n  },\n  methods: {\n    fetchPosts() {\n      axios.get('http://localhost:3000/api/posts')\n          .then(response => {\n            this.posts = response.data;\n          })\n          .catch(error => {\n            console.error('Error fetching posts:', error);\n          });\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* scoped styles */\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAO;;uBAAlBC,mBAAA,CAQM,OARNC,UAQM,GAPJC,mBAAA,CAAuB,YAAAC,gBAAA,CAAhBC,KAAA,CAAAC,QAAQ,kBACfH,mBAAA,CAKK,c,kBAJHF,mBAAA,CAGKM,SAAA,QAPXC,WAAA,CAIyBH,KAAA,CAAAI,KAAK,EAAbC,IAAI;yBAAfT,mBAAA,CAGK;MAHsBU,GAAG,EAAED,IAAI,CAACE;QACnCT,mBAAA,CAAiC,gBAAAC,gBAAA,CAAtBM,IAAI,CAACG,KAAK,kBACrBV,mBAAA,CAAyB,WAAAC,gBAAA,CAAnBM,IAAI,CAACI,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}