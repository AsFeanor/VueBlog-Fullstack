{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Posts\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Create a Post\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Create Post\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.msg), 1 /* TEXT */), _createElementVNode(\"div\", null, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fetchPosts && $options.fetchPosts(...args))\n  }, \"Fetch Posts\"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: post._id\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(post.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(post.content), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_hoisted_3, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.createPost && $options.createPost(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newPost.title = $event),\n    placeholder: \"Title\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPost.title]]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newPost.content = $event),\n    placeholder: \"Content\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPost.content]]), _hoisted_4], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_toDisplayString","$data","msg","_hoisted_2","onClick","_cache","args","$options","fetchPosts","_Fragment","_renderList","posts","post","key","_id","title","content","_hoisted_3","onSubmit","_withModifiers","createPost","$event","newPost","placeholder","_hoisted_4"],"sources":["/app/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <div>\n      <h2>Posts</h2>\n      <button @click=\"fetchPosts\">Fetch Posts</button>\n      <ul>\n        <li v-for=\"post in posts\" :key=\"post._id\">\n          <h3>{{ post.title }}</h3>\n          <p>{{ post.content }}</p>\n        </li>\n      </ul>\n    </div>\n    <div>\n      <h2>Create a Post</h2>\n      <form @submit.prevent=\"createPost\">\n        <input v-model=\"newPost.title\" placeholder=\"Title\" />\n        <textarea v-model=\"newPost.content\" placeholder=\"Content\"></textarea>\n        <button type=\"submit\">Create Post</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      msg: 'Welcome to Your Vue.js App',\n      posts: [],\n      newPost: {\n        title: '',\n        content: ''\n      }\n    };\n  },\n  methods: {\n    async fetchPosts() {\n      try {\n        const response = await this.$axios.get('http://localhost:3000/api/posts');\n        this.posts = response.data;\n      } catch (error) {\n        console.error('Failed to fetch posts:', error);\n      }\n    },\n    async createPost() {\n      try {\n        const response = await this.$axios.post('http://localhost:3000/api/posts', this.newPost);\n        this.posts.push(response.data);\n        this.newPost.title = '';\n        this.newPost.content = '';\n      } catch (error) {\n        console.error('Failed to create post:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Stil kodlarÄ± buraya */\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAO;gEAGdC,mBAAA,CAAc,YAAV,OAAK;gEAUTA,mBAAA,CAAsB,YAAlB,eAAa;gEAIfA,mBAAA,CAA0C;EAAlCC,IAAI,EAAC;AAAQ,GAAC,aAAW;;uBAjBvCC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJH,mBAAA,CAAkB,YAAAI,gBAAA,CAAXC,KAAA,CAAAC,GAAG,kBACVN,mBAAA,CASM,cARJO,UAAc,EACdP,mBAAA,CAAgD;IAAvCQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,aAAW,GACvCV,mBAAA,CAKK,c,kBAJHE,mBAAA,CAGKW,SAAA,QAVbC,WAAA,CAO2BT,KAAA,CAAAU,KAAK,EAAbC,IAAI;yBAAfd,mBAAA,CAGK;MAHsBe,GAAG,EAAED,IAAI,CAACE;QACnClB,mBAAA,CAAyB,YAAAI,gBAAA,CAAlBY,IAAI,CAACG,KAAK,kBACjBnB,mBAAA,CAAyB,WAAAI,gBAAA,CAAnBY,IAAI,CAACI,OAAO,iB;sCAIxBpB,mBAAA,CAOM,cANJqB,UAAsB,EACtBrB,mBAAA,CAIO;IAJAsB,QAAM,EAAAb,MAAA,QAAAA,MAAA,MAfnBc,cAAA,KAAAb,IAAA,KAe6BC,QAAA,CAAAa,UAAA,IAAAb,QAAA,CAAAa,UAAA,IAAAd,IAAA,CAAU;sBAC/BV,mBAAA,CAAqD;IAhB7D,uBAAAS,MAAA,QAAAA,MAAA,MAAAgB,MAAA,IAgBwBpB,KAAA,CAAAqB,OAAO,CAACP,KAAK,GAAAM,MAAA;IAAEE,WAAW,EAAC;iDAA3BtB,KAAA,CAAAqB,OAAO,CAACP,KAAK,E,mBAC7BnB,mBAAA,CAAqE;IAjB7E,uBAAAS,MAAA,QAAAA,MAAA,MAAAgB,MAAA,IAiB2BpB,KAAA,CAAAqB,OAAO,CAACN,OAAO,GAAAK,MAAA;IAAEE,WAAW,EAAC;iDAA7BtB,KAAA,CAAAqB,OAAO,CAACN,OAAO,E,GAClCQ,UAA0C,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}